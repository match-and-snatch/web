# I left old inline config in transloadit.yml but with '_templates' key, It doesn't appears to html.
# If you need to update transloadit config you can use this old inline config
# (need to rename '_templates' to 'template' of course), change it, test it and generate json for shared
# template via console like this:
#
# >>> Transloadit::Rails::Engine.template(:post_audio, {}).to_json
#
# paste this json to form on transloadit site and enjoy.
# Also we use inline config to get S3 bucket name for specific uploads

s3: &s3
  robot: '/s3/store'
  key: 'AKIAJ5KUIYFXQB5KUD5A'
  secret: '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'

# ===========================================
#
#                MIME FILTERS
#
# ===========================================

audio_filter: &audio_filter
  files:
    robot: '/file/filter'
    condition_type: 'and'
    accepts:
      - ["${file.mime}", "regex", "(audio|mp4)"]
      - ["${file.ext}", "regex", '^(aac|mp3)$']
    error_on_decline: true

document_filter: &document_filter
  files:
    robot: '/file/filter'
    accepts:
      - ["${file.name}", "regex", '^.+\.(doc|docx|rtf|txt|odt|csv|pps|ppt|pptx|indd|pdf|xlr|xls|xlsx)$']
    error_on_decline: true

image_filter: &image_filter
  files:
    robot: '/file/filter'
    accepts:
      - ["${file.mime}", "regex", "image"]
    error_on_decline: true

video_filter: &video_filter
  files:
    robot: '/file/filter'
    condition_type: 'and'
    accepts:
      - ["${file.mime}", "regex", "video"]
      - ["${file.ext}", "regex", '^(mp4|m4v|f4v|mov|flv|mkv)$']
    error_on_decline: true

video_or_audio_filter: &video_or_audio_filter
  files:
    robot: '/file/filter'
    condition_type: 'or'
    accepts:
      - ["${file.mime}", "regex", "video"]
      - ["${file.mime}", "regex", "audio"]
      - ["${file.ext}", "regex", '^(mp4|m4v|f4v|mov|flv|aac|mp3)$']
    error_on_decline: true

# ===========================================
#
#            MAIN CONFIGURATION
#
# ===========================================

transloadit_config: &transloadit_config
  s3_uploads_bucket: &s3_uploads_bucket
    <<: *s3
    bucket: <%= APP_CONFIG['transloadit']['uploads_bucket'] %>

  s3_media_bucket: &s3_media_bucket
    <<: *s3
    bucket: <%= APP_CONFIG['transloadit']['media_bucket'] %>

  s3_media_file: &s3_media_file
    robot: '/s3/store'
    <<: *s3_media_bucket
    path: '${assembly.id}__${file.id}____${file.url_name}'

  media: &media
    <<: *s3_media_file
    url_prefix: 'https://s3kch7itxilxuh.cloudfront.net/'

  video_steps: &video_steps
    thumbs:
      use: ":original"
      robot: "/video/thumbs"
      count: 2
      offsets: ['25%', '75%']
    s3_thumb:
      <<: *s3_uploads_bucket
      use: 'thumbs'
      path: 'uploads/video_previews/${fields.slug}/${file.id}____${file.url_name}'
    encode:
      robot: "/video/encode"
      use: ":original"
      ffmpeg_stack: "v2.2.3"
      preset: "ipad-high"
      width: null
      height: null
      resize_strategy: "pad"
      ffmpeg:
        vf: "scale='iw*sar:min(ih,720)', pad='max(iw,ih*(16/9)):ow/(16/9):(ow-iw)/2:(oh-ih)/2'"
    store_original:
      <<: *media
      use: ':original'
    store_low:
      <<: *s3_media_file
      use: 'encode'

  # the jquery_sdk version you want to use, read up on it here:
  # https://transloadit.com/blog/2013/02/transloadit-javascript-plugin-and-jquery-1-9
  # defaults to latest
  # use "v1.0.0" if you need IE6 support (using jQuery < 1.9)
  jquery_sdk_version: 'latest'
  auth:
    key: 'bd5bea60c06e11e3bf3d4b00c82e3cf7'
    secret: '80d8d557d23c2e6798dc55c6bedfdebaf281fec5' # this is optional, but highly recommended, https://transloadit.com/docs/authentication
    duration: 320000 # 30 minute validity period for signed upload forms
    max_size: 2000000000 # 2 gigabytes

  _templates:
    # template identified by template_id
    s3_store: 'S3_STORE_TEMPLATE_ID'

    # template defined inline
    profile_picture:
      steps:
        <<: *image_filter
        thumb_180x180:
          robot: '/image/resize'
          width: 180
          height: 180
          resize_strategy: 'fillcrop'
          strip: true
        thumb_50x50:
          robot: '/image/resize'
          width: 50
          height: 50
          strip: true
          resize_strategy: 'fillcrop'
          use: thumb_180x180
        store:
          <<: *s3_uploads_bucket
          use:
            - 'thumb_180x180'
            - 'thumb_50x50'
            - ':original'
          path: 'uploads/profile_pictures/${fields.slug}/${assembly.id}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    cover_picture:
      steps:
        <<: *image_filter
        resized:
          robot: '/image/resize'
          width: 970
          strip: true
          resize_strategy: 'fit'
        store:
          <<: *s3_uploads_bucket
          use:
            - resized
            - ":original"
          path: 'uploads/profile_covers/${fields.slug}/${assembly.id}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    welcome_media:
      steps:
        <<: *video_or_audio_filter
        <<: *video_steps

    post_video:
      steps:
        <<: *video_filter
        <<: *video_steps

    post_audio:
      steps:
        <<: *audio_filter
        store:
          <<: *media
          use: ':original'
          headers:
            'Content-Type': "${file.mime}"
            'Content-Disposition': "attachment; filename=${file.url_name}"

    post_photo:
      steps:
        <<: *image_filter
        full_size:
          robot: '/image/resize'
          use: ':original'
          width: 1920
          strip: true
          resize_strategy: 'fit'
        preview:
          robot: '/image/resize'
          use: 'full_size'
          width: 100
          height: 100
          strip: true
          resize_strategy: 'fillcrop'
        store:
          <<: *s3_uploads_bucket
          use:
            - ':original'
            - 'full_size'
            - 'preview'
          path: 'uploads/photos/${fields.slug}/${assembly.id}/${unique_prefix}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    post_document:
      steps:
        <<: *document_filter
        preview:
          robot: "/document/thumbs"
          page: 1
          width: 200
          resize_strategy: "fit"
        store:
          <<: *s3_uploads_bucket
          use:
            - ':original'
            - 'preview'
          path: 'uploads/documents/${fields.slug}/${assembly.id}__${file.url_name}'
          # bucket: private-assets?

development_templates: &development_templates
  templates:
    profile_picture: '599df8f004f211e59e98f52f83d0ec73'
    cover_picture: '45b86fa004f211e59dafe10c4d93915b'
    welcome_media: '255df72004f211e5a5f76f6a9552609a'
    post_video: '2dc260c004ea11e580958fc32c7fa937'
    post_audio: 'c4909fb004f111e59654552d6283d868'
    post_photo: 'e7e82b9004f111e5932433d265ebf1d9'
    post_document: '03f93a9004f211e5a57fc128ee431824'

production_templates: &production_templates
  templates:
    profile_picture: '2b4849f004f311e59ad5a39a2d0ec294'
    cover_picture: '14795c5004f311e5932433d265ebf1d9'
    welcome_media: '47b0047004f311e59fdb317f1c0ae354'
    post_video: 'e660ec2004ed11e5a001d564983a15e8'
    post_audio: 'c247a4a004f211e58a7e4777bf1f9527'
    post_photo: 'dacb201004f211e5b8f88ff515ee3893'
    post_document: 'fbef513004f211e5a001d564983a15e8'

development:
  <<: *transloadit_config
  <<: *development_templates

test:
  <<: *transloadit_config
  <<: *development_templates

staging:
  <<: *transloadit_config
  <<: *development_templates

production:
  <<: *transloadit_config
  <<: *production_templates
