s3: &s3
  robot: '/s3/store'
  key: 'AKIAJ5KUIYFXQB5KUD5A'
  secret: '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'

# ===========================================
#
#                MIME FILTERS
#
# ===========================================

audio_filter: &audio_filter
  files:
    robot: '/file/filter'
    condition_type: 'and'
    accepts:
      - ["${file.mime}", "regex", "audio"]
      - ["${file.ext}", "regex", '^(aac|m4a|mp3|ogg|oga)$']
    error_on_decline: true

document_filter: &document_filter
  files:
    robot: '/file/filter'
    accepts:
      - ["${file.name}", "regex", '^.+\.(doc|docx|rtf|txt|odt|csv|pps|ppt|pptx|indd|pdf|xlr|xls|xlsx)$']
    error_on_decline: true

image_filter: &image_filter
  files:
    robot: '/file/filter'
    accepts:
      - ["${file.mime}", "regex", "image"]
    error_on_decline: true

video_filter: &video_filter
  files:
    robot: '/file/filter'
    condition_type: 'and'
    accepts:
      - ["${file.mime}", "regex", "video"]
      - ["${file.ext}", "regex", '^(mp4|m4v|f4v|mov|flv|mkv)$']
    error_on_decline: true

video_or_audio_filter: &video_or_audio_filter
  files:
    robot: '/file/filter'
    condition_type: 'or'
    accepts:
      - ["${file.mime}", "regex", "video"]
      - ["${file.mime}", "regex", "audio"]
      - ["${file.ext}", "regex", '^(mp4|m4v|f4v|mov|flv|aac|m4a|mp3|ogg|oga)$']
    error_on_decline: true

# ===========================================
#
#            MAIN CONFIGURATION
#
# ===========================================

transloadit_config: &transloadit_config
  s3_uploads_bucket: &s3_uploads_bucket
    <<: *s3
    bucket: <%= APP_CONFIG['transloadit']['uploads_bucket'] %>

  s3_media_bucket: &s3_media_bucket
    <<: *s3
    bucket: <%= APP_CONFIG['transloadit']['media_bucket'] %>

  s3_media_file: &s3_media_file
    robot: '/s3/store'
    <<: *s3_media_bucket
    path: '${assembly.id}__${file.id}____${file.url_name}'

  media: &media
    <<: *s3_media_file
    url_prefix: 'https://s3kch7itxilxuh.cloudfront.net/'

  video_steps: &video_steps
    thumbs:
      use: ":original"
      robot: "/video/thumbs"
      offsets: ['42%']
    s3_thumb:
      <<: *s3_uploads_bucket
      use: 'thumbs'
      path: 'uploads/video_previews/${fields.slug}/${assembly.id}____${file.url_name}'
    encode:
      robot: "/video/encode"
      use: ":original"
      ffmpeg_stack: "v2.2.3"
      preset: "ipad"
      width: null
      height: null
      segment: true
      ffmpeg:
        b: "700k"
        r: "25"
        vf: "scale=-1:'min(ih,480)'"
    hd_files:
      use: ":original"
      robot: '/file/filter'
      condition_type: 'and'
      declines:
        - ["${file.meta.height}", "<", "480"]
      error_on_decline: false
    encode_hd:
      robot: "/video/encode"
      use: hd_files
      ffmpeg_stack: "v2.2.3"
      preset: "ipad-high"
      width: null
      height: null
      segment: true
      ffmpeg:
        r: null
        b: "1200k"
        vf: "scale=-1:'min(ih,1080)'"
    store_original:
      <<: *media
      use: ':original'
    store_low:
      <<: *s3_media_file
      use: 'encode'
    store_high:
      <<: *s3_media_file
      use: 'encode_hd'
    high_playlist:
      robot: '/media/playlist'
      use:
        steps: 'store_high'
        bundle_steps: true
      resolution: '1920x1080'
      bandwidth: 1600000
      name: high_playlist.m3u8
    low_playlist:
      robot: '/media/playlist'
      use:
        steps: 'store_low'
        bundle_steps: true
      resolution: '1280x740'
      bandwidth: 320000
      name: low_playlist.m3u8
    store_low_playlist:
      <<: *s3_media_file
      use: 'low_playlist'
    store_high_playlist:
      <<: *s3_media_file
      use: 'high_playlist'
    playlist:
      robot: '/media/playlist'
      use:
        steps:
          - 'high_playlist'
          - 'low_playlist'
        bundle_steps: true
    store_playlist:
      <<: *s3_media_file
      use: 'playlist'
      path: '${assembly.id}__playlist.m3u8'

  # the jquery_sdk version you want to use, read up on it here:
  # https://transloadit.com/blog/2013/02/transloadit-javascript-plugin-and-jquery-1-9
  # defaults to latest
  # use "v1.0.0" if you need IE6 support (using jQuery < 1.9)
  jquery_sdk_version: 'latest'
  auth:
    key: 'bd5bea60c06e11e3bf3d4b00c82e3cf7'
    secret: '80d8d557d23c2e6798dc55c6bedfdebaf281fec5' # this is optional, but highly recommended, https://transloadit.com/docs/authentication
    duration: 320000 # 30 minute validity period for signed upload forms

  templates:
    # template identified by template_id
    s3_store: 'S3_STORE_TEMPLATE_ID'

    # template defined inline
    profile_picture:
      steps:
        <<: *image_filter
        thumb_180x180:
          robot: '/image/resize'
          width: 180
          height: 180
          resize_strategy: 'fillcrop'
          strip: true
        thumb_50x50:
          robot: '/image/resize'
          width: 50
          height: 50
          strip: true
          resize_strategy: 'fillcrop'
          use: thumb_180x180
        store:
          <<: *s3_uploads_bucket
          use:
            - 'thumb_180x180'
            - 'thumb_50x50'
            - ':original'
          path: 'uploads/profile_pictures/${fields.slug}/${assembly.id}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    cover_picture:
      steps:
        <<: *image_filter
        resized:
          robot: '/image/resize'
          width: 970
          strip: true
          resize_strategy: 'fit'
        store:
          <<: *s3_uploads_bucket
          use:
            - resized
            - ":original"
          path: 'uploads/profile_covers/${fields.slug}/${assembly.id}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    welcome_media:
      steps:
        <<: *video_or_audio_filter
        <<: *video_steps

    post_video:
      steps:
        <<: *video_filter
        <<: *video_steps

    post_audio:
      steps:
        <<: *audio_filter
        store:
          <<: *media
          use: ':original'
          headers:
            'Content-Type': "${file.mime}"
            'Content-Disposition': "attachment; filename=${file.url_name}"

    post_photo:
      steps:
        <<: *image_filter
        full_size:
          robot: '/image/resize'
          use: ':original'
          width: 1920
          strip: true
          resize_strategy: 'fit'
        preview:
          robot: '/image/resize'
          use: 'full_size'
          width: 100
          height: 100
          strip: true
          resize_strategy: 'fillcrop'
        store:
          <<: *s3_uploads_bucket
          use:
            - ':original'
            - 'full_size'
            - 'preview'
          path: 'uploads/photos/${fields.slug}/${assembly.id}/${unique_prefix}____${file.meta.width}x${file.meta.height}____${file.url_name}'

    post_document:
      steps:
        <<: *document_filter
        preview:
          robot: "/document/thumbs"
          page: 1
          width: 200
          resize_strategy: "fit"
        store:
          <<: *s3_uploads_bucket
          use:
            - ':original'
            - 'preview'
          path: 'uploads/documents/${fields.slug}/${assembly.id}__${file.url_name}'
          # bucket: private-assets?

development:
  <<: *transloadit_config

test:
  <<: *transloadit_config

staging:
  <<: *transloadit_config

production:
  <<: *transloadit_config
