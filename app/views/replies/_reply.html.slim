- hidden = (reply.hidden? && reply.user_id != current_user.id) || (reply.hidden? && reply.post_user_id == current_user.id)
- if (!reply.hidden? || current_user.id == reply.post_user_id) || current_user.id == reply.user_id
  .nested_row data-identifier='comment-#{reply.id}'
    .nested_content.Comment data-comment_id=reply.id data-identifier='comment-user-#{reply.user_id}'
      - if can?(:delete, reply)
        .delete.fa.fa-gear.DropdownMenu data-target='edit-comment-#{reply.id}'
        .edit_container data-identifier='edit-comment-#{reply.id}' style='display: none'
          ul.control_menu
            li
              a.AjaxLink.delete_btn href=edit_comment_reply_path(reply.parent.id, reply.id) data-target='comment-#{reply.id}'
                i.control_edit.fa.fa-pencil Edit
              - if current_user.id == reply.post_user_id && current_user.id != reply.user_id
                - if reply.hidden?
                    li
                      a.AjaxLink href=confirm_make_visible_comment_reply_path(reply.parent.id, reply.id)
                        i.control_edit.fa.fa-eye data-identifier='comment-visibility-toggler-#{reply.id}' Show
                - else
                    li
                      a.AjaxLink href=confirm_hide_comment_reply_path(reply.parent.id, reply.id)
                        i.control_edit.fa.fa-eye-slash data-identifier='comment-visibility-toggler-#{reply.id}' Hide
            li
              a.AjaxFormLink.delete_btn href=comment_path(reply.id) data-_method='delete' data-target='comment-#{reply.id}'
                i.control_delete.fa.fa-trash Delete
            li
              a.Toggler data-target='edit-comment-#{reply.id}' href="#"
                i.control_close.fa.fa-times Close

      .comment_body data-identifier='comment-body-#{reply.id}' class='#{"hidden_content" if hidden}'
        .photo
          img src=reply.user_picture_url width=50 height=50
        .profile_name data-identifier='profile-name'
          = link_to_user reply.user
        .comment_text.Emoji
          = format_comment_message(reply)
        .cleaffix
        .post_date
          span.pull-left Posted #{time_ago_in_words reply.created_at} ago
          = render 'comments/like_small', comment: reply
      .clearfix
